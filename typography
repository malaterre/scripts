#!/bin/env python3

import argparse
import json
import sys
import os
import requests
import tmdbsimple as tmdb
import base64
import smartypants
import difflib
#import wasabi
#from colorama import Fore, Back, Style, init
# init()

try:
    from colorama import Fore, Back, Style, init
    init()
except ImportError:  # fallback so that the imported classes always exist
    class ColorFallback():
        def __getattr__(self, name): return ''
    Fore = Back = Style = ColorFallback()


# red = lambda text: f"{Fore.RED}{text}{Fore.RESET}"
def red(text): return f"\033[38;2;255;0;0m{text}\033[38;2;255;255;255m"


def green(text): return f"\033[38;2;0;255;0m{text}\033[38;2;255;255;255m"


def blue(text): return f"\033[38;2;0;0;255m{text}\033[38;2;255;255;255m"


def white(text): return f"\033[38;2;255;255;255m{text}\033[38;2;255;255;255m"


def black(text): return f"\033[38;2;0;0;0m{text}\033[38;2;255;255;255m"


def diff_strings2(old, new):
    result = ""
    codes = difflib.SequenceMatcher(a=old, b=new).get_opcodes()
    for code in codes:
        if code[0] == "equal":
            #result += white(old[code[1]:code[2]])
            result += black(old[code[1]:code[2]])
        elif code[0] == "delete":
            result += red(old[code[1]:code[2]])
        elif code[0] == "insert":
            result += green(new[code[3]:code[4]])
        elif code[0] == "replace":
            result += (red(old[code[1]:code[2]]) + green(new[code[3]:code[4]]))
    return result


def diff_strings(a, b):
    output = []
    matcher = difflib.SequenceMatcher(None, a, b)
    for opcode, a0, a1, b0, b1 in matcher.get_opcodes():
        if opcode == "equal":
            output.append(a[a0:a1])
        elif opcode == "insert":
            output.append(color(b[b0:b1], fg=16, bg="green"))
        elif opcode == "delete":
            output.append(color(a[a0:a1], fg=16, bg="red"))
        elif opcode == "replace":
            output.append(color(b[b0:b1], fg=16, bg="green"))
            output.append(color(a[a0:a1], fg=16, bg="red"))
    return "".join(output)


def get_location(url):
    response = requests.head(url, allow_redirects=True)
    return response.url

# def color_diff(diff):
#    for line in diff:
#        if line.startswith('+'):
#            yield Fore.GREEN + line + Fore.RESET
#        elif line.startswith('-'):
#            yield Fore.RED + line + Fore.RESET
#        elif line.startswith('^'):
#            yield Fore.BLUE + line + Fore.RESET
#        else:
#            yield line


def cleanup(instr):
    return instr.replace("  ", " ").replace("'", "’").replace(
        '"', '«', 1).replace('"', '»', 1).replace("...", "…")

def main(args):
    verbose = args.verbose
    movie_id = args.movie_id
    lang = args.lang

    tmdb.API_KEY = '800fd6556557cf00577e6f28190b26a8'
    tmdb.debug = True

    auth = tmdb.Authentication()
    token = auth.token_new()["request_token"]

    password = os.environ['TMDB_PASS']
    cookie = os.environ['TMDB_COOKIE']
    auth.token_validate_with_login(
        request_token=token, username="malaterre", password=password)
    session_id = auth.session_new(request_token=token)["session_id"]
    acc = tmdb.Account(session_id)
    # print(acc.info())
    if verbose:
        print(session_id)
    # s = auth.session_new()
    # print(s)
    # account = tmdb.Account()

    # movies = []
    # idx = 1
    # while True:
    #    res = acc.rated_movies()
    #    movies = movies + res["results"]
    #    idx = idx + 1
    #    if idx > res["total_pages"]:
    #        break
    #
    # print(json.dumps(movies, indent=2))

    # https://www.themoviedb.org/movie/920
    # movie_id = 336313
    # movie_id = 9836
    identity = tmdb.Movies(movie_id)
    # TODO: &append_to_response=genre
    response = identity.info(language='fr-FR')
    if verbose:
        print(json.dumps(response, indent=4, sort_keys=True))
    overview_old = response['overview']
    overview_new = cleanup(overview_old)
    #overview_new = smartypants.smartypants(overview_new)

    # print(overview_old)
    if verbose:
     print(overview_new)
    #diff = difflib.ndiff(overview_old, overview_new)
    # print('\n'.join(diff))
    #diff = color_diff(diff)
    # print('\n'.join(diff))
    # print(red("coucou"))
    print(diff_strings2(overview_old, overview_new))
    print(Fore.RESET)

    root_url = 'https://www.themoviedb.org/movie/'
    #    'referer': 'https://www.themoviedb.org/movie/9836-happy-feet/edit?active_nav_item=primary_facts',
    referer = get_location(root_url + str(movie_id)) + \
        '/edit?active_nav_item=primary_facts'
    if verbose:
        print(referer)

    headers = {
        'authority': 'www.themoviedb.org',
        'accept': 'application/json, text/javascript, */*; q=0.01',
        'x-requested-with': 'XMLHttpRequest',
        'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36',
        'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
        'origin': 'https://www.themoviedb.org',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        'referer': referer,
        'accept-language': 'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7',
        'cookie': cookie,
    }

    # data = {
    #  'title': 'Hell & Back',
    #  'fr_FR_translated_title': '',
    #  'fr_FR_tagline': '',
    #  'fr_FR_overview': 'Deux amis tentent d\u2019en sauver un troisi\xE8me, tra\xEEn\xE9 en enfer par accident.',
    #  'status': 'Released',
    #  'adult': '0',
    #  '_type': 'Movie',
    #  'video': '0',
    #  'fr_FR_runtime': '',
    #  'revenue': '157768',
    #  'budget': '',
    #  'fr_FR_homepage': '',
    #  'spoken_languages[]': 'en'
    # }

    if verbose:
        print(json.dumps(headers, indent=4, sort_keys=True))

    data = {
        #    '$fr_FR_translated_title': 'Happy Feet',
        #    'fr_FR_tagline': 'Chaque manchot a une chanson... Mais Mumble n\'est pas un manchot comme les autres',
        'fr_FR_overview': overview_new,
        #    'fr_FR_runtime': '108',
        #    'budget': response['budget']
        #    'fr_FR_homepage': '',
        #    'spoken_languages[]': spoken_languages[0]
    }
    # if 'original_title' in response:
    #    data['title'] = response['original_title']
    if 'title' in response:
        data['fr_FR_translated_title'] = cleanup(response['title'])
    if 'tagline' in response:
        data['fr_FR_tagline'] = cleanup(response['tagline'])
    if 'homepage' in response:
        data['fr_FR_homepage'] = response['homepage']

    # data['_type'] = 'Movie' # FIXME '69016' / 810
    # if 'status' in response:
    #    data['status'] = response['status']
    # if 'adult' in response:
    #  data['adult'] = 1 if response['adult'] else 0
    # if 'video' in response:
    #    data['video'] = "1" if response['video'] else "0"
    if 'revenue' in response:
        data['revenue'] = str(response['revenue'])
    if 'budget' in response:
        data['budget'] = str(response['budget'])
    if 'runtime' in response:
        data['fr_FR_runtime'] = str(response['runtime'])
    if 'spoken_languages' in response:
        spoken_languages = [entry['iso_639_1']
                            for entry in response['spoken_languages']]
        # print(spoken_languages)
        if len(spoken_languages) == 1:
            data['spoken_languages[]'] = spoken_languages[0]
        else:
            print(spoken_languages)
            if not lang:
                sys.exit(1)

    if verbose:
        print(json.dumps(data, indent=4, sort_keys=True))

    data2 = [
        ('$fr_FR_translated_title', 'Shrek 4, il \xE9tait une fin'),
        ('fr_FR_tagline', '\xC7a va d\xE9coiffer \\u0021'),
        ('fr_FR_overview', 'Apr\xE8s avoir vaincu un m\xE9chant dragon, sauv\xE9 une belle princesse et le royaume de ses parents, que peut encore faire un ogre malodorant et mal l\xE9ch\xE9 ? Domestiqu\xE9, assagi, Shrek a perdu jusqu\u2019\xE0 l\u2019envie de rugir et regrette le bon vieux temps o\xF9 il semait la terreur dans le royaume. Aujourd\u2019hui, tel une idole d\xE9chue, il se contente de signer des autographes \xE0 tour de bras. Trop triste... C\u2019est alors que l\u2019habile et sournois Tracassin lui propose un contrat. Shrek se retrouve soudain transport\xE9 dans un monde parall\xE8le totalement d\xE9jant\xE9 o\xF9 les ogres sont pourchass\xE9s, o\xF9 Tracassin est roi, o\xF9 Fiona et son bien-aim\xE9 ne se jamais rencontr\xE9s...Shrek va-t-il r\xE9ussir \xE0 d\xE9jouer le sortil\xE8ge, \xE0 repasser de l\u2019autre c\xF4t\xE9 du miroir, \xE0 sauver ses amis, \xE0 retrouver son monde et reconqu\xE9rir l\u2019amour de sa vie ?'),
        ('fr_FR_runtime', '93'),
        ('revenue', '752600867'),
        ('budget', '165000000'),
        ('fr_FR_homepage', 'https://www.dreamworks.com/movies/shrek'),
        ('spoken_languages[]', 'en'),
        ('spoken_languages[]', 'pt'),
    ]

    #print(json.dumps(data2, indent=4, sort_keys=True))

    # 'https://www.themoviedb.org/movie/9836-happy-feet/remote/primary_facts', headers=headers, data=data)
    primary_facts = get_location(
        root_url + str(movie_id)) + '/remote/primary_facts'
    # print(primary_facts)

    if not args.dry_run:
        response = requests.post(primary_facts, headers=headers, data=data)
        print(response)

    # curl 'https://www.themoviedb.org/movie/9836-happy-feet/remote/primary_facts' \
    #  -H 'authority: www.themoviedb.org' \
    #  -H 'accept: application/json, text/javascript, */*; q=0.01' \
    #  -H 'x-requested-with: XMLHttpRequest' \
    #  -H 'user-agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36' \
    #  -H 'content-type: application/x-www-form-urlencoded; charset=UTF-8' \
    #  -H 'origin: https://www.themoviedb.org' \
    #  -H 'sec-fetch-site: same-origin' \
    #  -H 'sec-fetch-mode: cors' \
    #  -H 'sec-fetch-dest: empty' \
    #  -H 'referer: https://www.themoviedb.org/movie/9836-happy-feet/edit?active_nav_item=primary_facts' \
    #  -H 'accept-language: fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7' \
    #  --data-raw $'fr_FR_translated_title=Happy+Feet&fr_FR_tagline=Chaque+manchot+a+une+chanson...+Mais+Mumble+n\'est+pas+un+manchot+comme+les+autres&fr_FR_overview=Un+manchot+de+l%E2%80%99Antarctique+n\'arrivera+jamais+%C3%A0+rien+s\'il+ne+sait+pas+chanter%2C+et+le+pauvre+Mumble+est+sans+conteste+le+pire+chanteur+du+monde.+Son+talent+%C3%A0+lui%2C+c\'est...+les+claquettes%2C+qu\'il+pratique+en+virtuose%2C+avec+une+ardeur+confondante.Bien+que+sa+maman%2C+Norma+Jean%2C+trouve+ce+don+%22tout+%C3%A0+fait+charmant%22%2C+son+p%C3%A8re%2C+Memphis%2C+juge+que+%22%C3%A7a+ne+fait+vraiment+pas+pingouin%22.+Tous+deux+savent+aussi+que+leur+rejeton+ne+trouvera+l\'%C3%A2me+soeur+que+le+jour+o%C3%B9+il+saura+pousser+son+%22chant+d\'amour%22.+Le+hasard+fait+bien+les+choses+%3A+Gloria%2C+la+seule+et+unique+amie+de+notre+h%C3%A9ros%2C+est+la+meilleure+chanteuse+de+la+r%C3%A9gion.+Mumble+et+elle+sont+copains+depuis+toujours%2C+bien+que+cette+gracieuse+cr%C3%A9ature+ait+encore+du+mal+%C3%A0+accepter+son+%C3%A9trange+%22anomalie%22.Banni+de+la+tribu%2C+Mumble+se+lie+avec+les+Amigos+de+Terre+Ad%C3%A9lie%2C+un+groupe+latino+exub%C3%A9rant%2C+men%C3%A9+par+Ramon...&fr_FR_runtime=108&budget=100000000&fr_FR_homepage=&spoken_languages%5B%5D=en' \
    #  --compressed

    # curl 'https://www.themoviedb.org/movie/336313-hell-back/remote/primary_facts' \
    #  -H 'authority: www.themoviedb.org' \
    #  -H 'accept: application/json, text/javascript, */*; q=0.01' \
    #  -H 'x-requested-with: XMLHttpRequest' \
    #  -H 'user-agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36' \
    #  -H 'content-type: application/x-www-form-urlencoded; charset=UTF-8' \
    #  -H 'origin: https://www.themoviedb.org' \
    #  -H 'sec-fetch-site: same-origin' \
    #  -H 'sec-fetch-mode: cors' \
    #  -H 'sec-fetch-dest: empty' \
    #  -H 'referer: https://www.themoviedb.org/movie/336313-hell-back/edit?active_nav_item=primary_facts' \
    #  -H 'accept-language: fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7' \
    #  --data-raw 'title=Hell+%26+Back&fr_FR_translated_title=&fr_FR_tagline=&fr_FR_overview=Deux+amis+tentent+d%E2%80%99en+sauver+un+troisi%C3%A8me%2C+tra%C3%AEn%C3%A9+en+enfer+par+accident.&status=Released&adult=0&_type=Movie&video=0&fr_FR_runtime=&revenue=157768&budget=&fr_FR_homepage=&spoken_languages%5B%5D=en' \
    #  --compressed

    # curl 'https://www.themoviedb.org/movie/159824-hotel-transylvania-2/remote/primary_facts' \
    #  -H 'authority: www.themoviedb.org' \
    #  -H 'accept: application/json, text/javascript, */*; q=0.01' \
    #  -H 'x-requested-with: XMLHttpRequest' \
    #  -H 'user-agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36' \
    #  -H 'content-type: application/x-www-form-urlencoded; charset=UTF-8' \
    #  -H 'origin: https://www.themoviedb.org' \
    #  -H 'sec-fetch-site: same-origin' \
    #  -H 'sec-fetch-mode: cors' \
    #  -H 'sec-fetch-dest: empty' \
    #  -H 'referer: https://www.themoviedb.org/movie/159824-hotel-transylvania-2/edit?active_nav_item=primary_facts' \
    #  -H 'accept-language: fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7' \
    #  --data-raw $'fr_FR_translated_title=H%C3%B4tel+Transylvanie+2&fr_FR_tagline=Plus+il+y+a+de+monstres%2C+plus+il+y+a+de+probl%C3%A8mes+\u0021&fr_FR_overview=Dracula+est+dor%C3%A9navant+grand-p%C3%A8re+et+est+bien+d%C3%A9cid%C3%A9+%C3%A0+initier+son+petit+gar%C3%A7on+%C3%A0+la+crini%C3%A8re+rousse+aux+rudiments+du+monde+de+l\'%C3%A9pouvante.+Bien+s%C3%BBr%2C+rien+ne+va+se+passer+comme+pr%C3%A9vu+pour+notre+dr%C3%B4lissime+vampire+et+sa+bande+de+monstres+%3A+Frankenstein%2C+la+Momie%2C+l%E2%80%99Homme+invisible%2C+le+Loup-garou+et+le+Blob...&fr_FR_runtime=90&revenue=473226958&budget=80000000&fr_FR_homepage=&spoken_languages%5B%5D=en' \
    #  --compressed


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="tmdb typo")
    parser.add_argument("movie_id", help='movie id')
    #
    parser.add_argument("--dry-run",
                        help="dry run", action='store_true')
    # verbose
    parser.add_argument("--lang",
                        help="verbose output", action='store_true')
    parser.add_argument("--verbose",
                        help="verbose output", action='store_true')
    main(parser.parse_args())
